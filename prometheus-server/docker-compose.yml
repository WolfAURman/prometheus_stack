version: '3.8'

networks:
  monitoring:
    driver: bridge

services:
  grafana:
    image: 'docker.io/grafana/grafana-enterprise:latest'
    container_name: 'grafana-enterprise'
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: '256M'
    volumes:
      - '/root/cfg/grafana:/var/lib/grafana/:rw,z'
      - '/root/.grafana/certs/fullchain.pem:/etc/grafana/grafana.crt:ro,z'
      - '/root/.grafana/certs/key.pem:/etc/grafana/grafana.key:ro,z'
    environment:
      - 'GF_SERVER_HTTP_PORT=443'
      - 'GF_SERVER_PROTOCOL=https'
      - 'GF_SERVER_CERT_FILE=/etc/grafana/grafana.crt'
      - 'GF_SERVER_CERT_KEY=/etc/grafana/grafana.key'
    user: '0'
    ports:
      - '443:443'
    networks:
      - monitoring

  prometheus:
    image: 'docker.io/prom/prometheus:latest'
    container_name: 'prometheus'
    deploy:
      resources:
        limits:
          memory: '256M'
    privileged: true
    user: root
    restart: unless-stopped
    volumes:
      - '/root/cfg/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro,z'
      - '/root/cfg/prometheus/rules.yml:/etc/prometheus/rules.yml:ro,z'
      - '/root/data/prometheus:/prometheus:rw,z'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=60d'
    ports:
      - '9090:9090/tcp'
    networks:
      - monitoring

  alertmanager:
    image: 'docker.io/prom/alertmanager:latest'
    container_name: 'alertmanager'
    deploy:
      resources:
        limits:
          memory: '256M'
    restart: unless-stopped
    volumes:  
      - '/root/cfg/alertmanager:/etc/alertmanager:ro,z'
    ports:
      - '9093:9093/tcp'
    networks:
      - monitoring
